<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChooseFolderButton.Text" xml:space="preserve">
    <value>Escolher pasta</value>
    <comment>Content text for the button to open the folder picker</comment>
  </data>
  <data name="ConversionCompleteTitle" xml:space="preserve">
    <value>Conversão completa!</value>
    <comment>Text for when the conversion is complete.</comment>
  </data>
  <data name="ConvertButton.Text" xml:space="preserve">
    <value>Converter</value>
    <comment>Content text for the button to convert images</comment>
  </data>
  <data name="ConversionCompleteContent" xml:space="preserve">
    <value>As imagens já foram salvadas</value>
    <comment>Additional text after converting from the list</comment>
  </data>
  <data name="ConversionCompleteContent2" xml:space="preserve">
    <value>As imagens já foram convertidas e agora podem ser salvadas</value>
    <comment>Additional text after converting from the list</comment>
  </data>
  <data name="ArgumentsTextBox.Header" xml:space="preserve">
    <value>Argumentos</value>
    <comment>Header text for the arguments text box</comment>
  </data>
  <data name="SaveImagesButton.Text" xml:space="preserve">
    <value>Salvar imagens</value>
    <comment>Content text for the save images button</comment>
  </data>
  <data name="DragAndDropInstructions.Text" xml:space="preserve">
    <value>Arraste e solte imagens aqui</value>
    <comment>Text for the drag and drop text block</comment>
  </data>
  <data name="ConversionFailedTitle" xml:space="preserve">
    <value>Algo deu errado!</value>
    <comment>Title text for conversion failed info bar</comment>
  </data>
  <data name="ConversionFailedMessage" xml:space="preserve">
    <value>Algumas imagens podem não ter sido convertidas. Se estiver adicionando argumentos, certifique-se de que estão corretos e que não há espaço no começo e no final.</value>
    <comment>Message text for conversion failed info bar</comment>
  </data>
  <data name="ExpertsSection1.Text" xml:space="preserve">
    <value>Configurações para experts</value>
    <comment>Text for the content portion of the enable arguments check box</comment>
  </data>
  <data name="ExpertsSection2.Text" xml:space="preserve">
    <value>Adicionar argumentos para a conversão.</value>
    <comment>Text for the content portion of the enable arguments check box</comment>
  </data>
  <data name="NameConflictDialogTitle" xml:space="preserve">
    <value>Conflito de nomes</value>
    <comment>Content text for the name conflict dialog</comment>
  </data>
  <data name="NameConflictDialogContent" xml:space="preserve">
    <value>Algumas das imagens não puderam ser salvadas porque um arquivo com o mesmo nome já existe na pasta que você escolheu.</value>
    <comment>Content text for the naming conflict dialog</comment>
  </data>
  <data name="NameConflictDialogPrimaryButton" xml:space="preserve">
    <value>Renomear e tentar novamente</value>
    <comment>Text for the naming conflict dialog primary button</comment>
  </data>
  <data name="RenameTextBoxHeader" xml:space="preserve">
    <value>Novo nome</value>
    <comment>Header text for the rename text box</comment>
  </data>
  <data name="AppMadeWith.Text" xml:space="preserve">
    <value>Este aplicativo foi feito com</value>
    <comment>Text for the info flyout</comment>
  </data>
  <data name="ClearListButton.Text" xml:space="preserve">
    <value>Limpar lista</value>
    <comment>Content text for the clear list button</comment>
  </data>
  <data name="ClearListButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Limpar a lista de imagens convertidas e não convertidas</value>
    <comment>Tooltip text for the clear list button</comment>
  </data>
  <data name="ContentDialogCloseButton" xml:space="preserve">
    <value>Fechar</value>
    <comment>Text for close button in content dialogs</comment>
  </data>
  <data name="SuccessDialogContent" xml:space="preserve">
    <value>Todas as imagens das pastas foram convertidas.</value>
    <comment>Text for the success dialog content</comment>
  </data>
  <data name="SuccessDialogTitle" xml:space="preserve">
    <value>Sucesso!</value>
    <comment>Text for success dialog title</comment>
  </data>
  <data name="MildErrorDialogContent" xml:space="preserve">
    <value>Algumas imagens não foram convertidas. É possível que os comandos estejam incorretos. Clique no botão abaixo para ver as imagens não convertidas.</value>
    <comment>Text for the mild error dialog content</comment>
  </data>
  <data name="MildErrorDialogTitle" xml:space="preserve">
    <value>Atenção!</value>
    <comment>Text for the mild error dialog title</comment>
  </data>
  <data name="ViewErrorImages.Content" xml:space="preserve">
    <value>Ver imagens não convertidas</value>
    <comment>Text for the show error images button content</comment>
  </data>
  <data name="AppNotificationSuccessContent" xml:space="preserve">
    <value>Processo completo</value>
    <comment>Text for successful conversion notification</comment>
  </data>
  <data name="MalformedStringDialogContent" xml:space="preserve">
    <value>Verifique a caixa de texto acima e verifique se há algum erro.</value>
    <comment>Text for malformed string dialog content</comment>
  </data>
  <data name="MalformedStringDialogTitle" xml:space="preserve">
    <value>Comandos inválidos</value>
    <comment>Text for the malformed string dialog title</comment>
  </data>
  <data name="AddFolderButton.Text" xml:space="preserve">
    <value>Adicionar pasta</value>
    <comment>Content text for the add folder button</comment>
  </data>
  <data name="ChooseImages.Text" xml:space="preserve">
    <value>Escolher imagens</value>
    <comment>Context text for the choose images button</comment>
  </data>
</root>